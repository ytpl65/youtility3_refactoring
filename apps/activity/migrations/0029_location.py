# Generated by Django 3.2.14 on 2023-01-19 06:16

import apps.activity.models
import apps.peoples.models
from django.conf import settings
import django.contrib.gis.db.models.fields
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('onboarding', '0005_auto_20221021_1344'),
        ('tenants', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('activity', '0028_ticket_uuid'),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('uuid', models.UUIDField(blank=True, default=uuid.uuid4, unique=True)),
                ('loccode', models.CharField(max_length=50, unique=True, verbose_name='Asset Code')),
                ('locname', models.CharField(max_length=250, verbose_name='Asset Name')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
                ('iscritical', models.BooleanField(verbose_name='Is Critical')),
                ('gpslocation', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326, verbose_name='GPS Location')),
                ('locstatus', models.CharField(choices=[('MAINTENANCE', 'Maintenance'), ('STANDBY', 'Standby'), ('WORKING', 'Working'), ('SCRAPPED', 'Scrapped')], max_length=55, verbose_name='Running Status')),
                ('locjson', models.JSONField(blank=True, default=apps.activity.models.loc_json, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True, verbose_name='Location Json')),
                ('bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='location_bus', to='onboarding.bt', verbose_name='Site')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='location_clients', to='onboarding.bt', verbose_name='Client')),
                ('cuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='location_cusers', to=settings.AUTH_USER_MODEL)),
                ('muser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='location_musers', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='activity.location', verbose_name='Belongs to')),
                ('tenant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='location_types', to='onboarding.typeassist', verbose_name='Type')),
            ],
            options={
                'ordering': ['mdtz'],
                'abstract': False,
            },
        ),
    ]
