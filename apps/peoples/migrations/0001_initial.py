# Generated by Django 3.1 on 2021-10-13 09:19

import apps.peoples.managers
import apps.peoples.models
import apps.peoples.utils
from django.conf import settings
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('onboarding', '0001_initial'),
        ('tenants', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('peopleimg', models.ImageField(blank=True, default='master/people/blank.png', null=True, upload_to=apps.peoples.utils.upload_peopleimg, verbose_name='peopleimg')),
                ('peoplecode', models.CharField(max_length=50, verbose_name='peoplecode')),
                ('peoplename', models.CharField(max_length=120, verbose_name='peoplename')),
                ('loginid', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='loginid')),
                ('isadmin', models.BooleanField(default=False, verbose_name='isadmin')),
                ('is_staff', models.BooleanField(default=False, verbose_name='staff status')),
                ('isenable', models.BooleanField(default=True, verbose_name='isactive')),
                ('deviceid', models.CharField(default='-1', max_length=50, verbose_name='deviceid')),
                ('email', apps.peoples.models.SecureString(max_length=254, unique=True, verbose_name='email')),
                ('mobno', apps.peoples.models.SecureString(max_length=254, unique=True, verbose_name='mobno')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=15, null=True, verbose_name='gender')),
                ('dateofbirth', models.DateField(verbose_name='dob')),
                ('dateofjoin', models.DateField(verbose_name='doj')),
                ('dateofreport', models.DateField(blank=True, null=True, verbose_name='dor')),
                ('people_extras', models.JSONField(blank=True, default=apps.peoples.models.peoplejson, encoder=django.core.serializers.json.DjangoJSONEncoder, verbose_name='people_extras')),
                ('clientid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='people_clientids', to='onboarding.bt')),
                ('cuser', models.ForeignKey(blank=True, db_column='cuser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='people_cusers', to=settings.AUTH_USER_MODEL)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='people_departments', to='onboarding.typeassist')),
                ('designation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='people_designations', to='onboarding.typeassist')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('muser', models.ForeignKey(blank=True, db_column='muser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='people_musers', to=settings.AUTH_USER_MODEL)),
                ('peopletype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='people_types', to='onboarding.typeassist')),
                ('reportto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='children', to=settings.AUTH_USER_MODEL)),
                ('shift', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='onboarding_shift', to='onboarding.shift')),
                ('siteid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='people_siteids', to='onboarding.bt')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'people',
            },
            managers=[
                ('objects', apps.peoples.managers.PeopleManager()),
            ],
        ),
        migrations.CreateModel(
            name='Pgroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('groupname', models.CharField(max_length=250, verbose_name='groupname')),
                ('enable', models.BooleanField(default=True, verbose_name='enable')),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgroup_clientids', to='onboarding.bt')),
                ('cuser', models.ForeignKey(blank=True, db_column='cuser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgroup_cusers', to=settings.AUTH_USER_MODEL)),
                ('identifier', models.ForeignKey(blank=True, db_column='identifier', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgroup_idfs', to='onboarding.typeassist')),
                ('muser', models.ForeignKey(blank=True, db_column='muser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgroup_musers', to=settings.AUTH_USER_MODEL)),
                ('siteid', models.ForeignKey(blank=True, db_column='buid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgroup_siteids', to='onboarding.bt')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'db_table': 'pgroup',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pgbelonging',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('isgrouplead', models.BooleanField(default=False, verbose_name='isgrouplead')),
                ('assignsites', models.ForeignKey(blank=True, db_column='assignsites', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgbelongs_assignsites', to='onboarding.bt')),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgbelonging_clients', to='onboarding.bt')),
                ('cuser', models.ForeignKey(blank=True, db_column='cuser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgbelonging_cusers', to=settings.AUTH_USER_MODEL)),
                ('groupid', models.ForeignKey(blank=True, db_column='groupid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgbelongs_grps', to='peoples.pgroup')),
                ('muser', models.ForeignKey(blank=True, db_column='muser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgbelonging_musers', to=settings.AUTH_USER_MODEL)),
                ('peopleid', models.ForeignKey(blank=True, db_column='peopleid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgbelongs_peoples', to=settings.AUTH_USER_MODEL)),
                ('siteid', models.ForeignKey(blank=True, db_column='buid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='pgbelonging_sites', to='onboarding.bt')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'db_table': 'pgbelonging',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PeopleEventlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('accuracy', models.IntegerField(blank=True, null=True, verbose_name='accuracy')),
                ('deviceid', models.CharField(blank=True, max_length=50, null=True, verbose_name='deviceid')),
                ('datetime', models.DateTimeField(verbose_name='datetime')),
                ('gpslocation', models.CharField(default='0.0,0.0', max_length=50, verbose_name='gpslocation')),
                ('facerecognition', models.BooleanField(default=False, verbose_name='facerecognition')),
                ('expamt', models.IntegerField(blank=True, null=True, verbose_name='exampt')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='duration')),
                ('reference', models.CharField(blank=True, max_length=50, null=True, verbose_name='reference')),
                ('remarks', models.CharField(blank=True, max_length=500, null=True, verbose_name='remarks')),
                ('distance', models.IntegerField(blank=True, null=True, verbose_name='distance')),
                ('ctzoffset', models.IntegerField(blank=True, default=0, null=True, verbose_name='ctzoffset')),
                ('otherlocation', models.CharField(blank=True, max_length=200, null=True, verbose_name='otherlocation')),
                ('peventlogextras', models.JSONField(default=apps.peoples.models.peventlog_json, encoder=django.core.serializers.json.DjangoJSONEncoder, verbose_name='peventlogextras')),
                ('buid', models.ForeignKey(blank=True, db_column='buid', null=True, on_delete=django.db.models.deletion.RESTRICT, to='onboarding.bt')),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='clientids', to='onboarding.bt')),
                ('cuser', models.ForeignKey(blank=True, db_column='cuser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='peopleeventlog_cusers', to=settings.AUTH_USER_MODEL)),
                ('muser', models.ForeignKey(blank=True, db_column='muser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='peopleeventlog_musers', to=settings.AUTH_USER_MODEL)),
                ('peopleid', models.ForeignKey(blank=True, db_column='peopleid', null=True, on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('peventtype', models.ForeignKey(blank=True, db_column='peventtype', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='eventypes', to='onboarding.typeassist')),
                ('punchstatus', models.ForeignKey(blank=True, db_column='punchstatus', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='statustypes', to='onboarding.typeassist')),
                ('siteid', models.ForeignKey(blank=True, db_column='siteid', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='siteids', to='onboarding.bt')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
                ('transportmode', models.ForeignKey(blank=True, db_column='transportmode', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='transportmodetypes', to='onboarding.typeassist')),
                ('verifiedby', models.ForeignKey(blank=True, db_column='verifiedby', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='verifiedpeoples', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'peopleeventlog',
                'get_latest_by': ['mdtz'],
            },
        ),
        migrations.CreateModel(
            name='Capability',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('capscode', models.CharField(max_length=50, verbose_name='caps')),
                ('capsname', models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='includes')),
                ('cfor', models.CharField(choices=[('WEB', 'WEB'), ('PORTLET', 'PORTLET'), ('REPORT', 'REPORT'), ('MOB', 'MOB')], default='WEB', max_length=10, verbose_name='cfor')),
                ('clientid', models.ForeignKey(blank=True, db_column='clientid', null=True, on_delete=django.db.models.deletion.RESTRICT, to='onboarding.bt')),
                ('cuser', models.ForeignKey(blank=True, db_column='cuser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='capability_cusers', to=settings.AUTH_USER_MODEL)),
                ('muser', models.ForeignKey(blank=True, db_column='muser', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='capability_musers', to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, db_column='parent', null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='children', to='peoples.capability')),
                ('tenant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tenants.tenant')),
            ],
            options={
                'verbose_name': 'Capability',
                'verbose_name_plural': 'Capabilities',
                'db_table': 'capability',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
            managers=[
                ('objects', apps.peoples.managers.CapabilityManager()),
            ],
        ),
        migrations.AddConstraint(
            model_name='pgroup',
            constraint=models.UniqueConstraint(fields=('groupname', 'identifier'), name='pgroup_groupname_buid_clientid_identifier_key'),
        ),
        migrations.AddConstraint(
            model_name='pgroup',
            constraint=models.UniqueConstraint(fields=('groupname', 'identifier'), name='pgroup_groupname_buid_identifier_key'),
        ),
        migrations.AddConstraint(
            model_name='pgbelonging',
            constraint=models.UniqueConstraint(fields=('groupid', 'peopleid', 'assignsites'), name='pgbelonging_groupid_peopleid_buid_assignsites_clientid'),
        ),
        migrations.AddConstraint(
            model_name='capability',
            constraint=models.UniqueConstraint(fields=('capscode', 'cfor'), name='capability_caps_cfor_uk'),
        ),
        migrations.AddConstraint(
            model_name='people',
            constraint=models.UniqueConstraint(fields=('loginid', 'peoplecode', 'siteid'), name='peolple_logind_peoplecode_siteid_uk'),
        ),
        migrations.AddConstraint(
            model_name='people',
            constraint=models.UniqueConstraint(fields=('peoplecode', 'siteid'), name='people_peoplecode_siteid'),
        ),
        migrations.AddConstraint(
            model_name='people',
            constraint=models.UniqueConstraint(fields=('loginid', 'siteid'), name='people_loginid_siteid_uk'),
        ),
        migrations.AddConstraint(
            model_name='people',
            constraint=models.UniqueConstraint(fields=('loginid',), name='people_loginid_uk'),
        ),
    ]
