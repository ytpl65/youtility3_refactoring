# Generated by Django 3.1 on 2021-11-24 06:46

import apps.onboarding.models
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('bucode', models.CharField(max_length=15, verbose_name='Code')),
                ('bu_preferences', models.JSONField(blank=True, default=apps.onboarding.models.bu_defaults, encoder=django.core.serializers.json.DjangoJSONEncoder, verbose_name='bu_preferences')),
                ('buname', models.CharField(max_length=200, verbose_name='Name')),
                ('butree', models.CharField(blank=True, max_length=300, null=True, verbose_name='Bu Path')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
                ('iswarehouse', models.BooleanField(default=False, verbose_name='Is Warehouse')),
                ('gpsenable', models.BooleanField(default=False, verbose_name='GPS Enable')),
                ('enablesleepingguard', models.BooleanField(default=False, verbose_name='Enable SleepingGuard')),
                ('skipsiteaudit', models.BooleanField(default=False, verbose_name='Skip SiteAudit')),
                ('siincludes', models.TextField(default='', verbose_name='Site Inclides')),
                ('deviceevent', models.BooleanField(default=False, verbose_name='Device Event')),
                ('pdist', models.FloatField(blank=True, default=0.0, null=True, verbose_name='pdist')),
                ('gpslocation', models.CharField(blank=True, default='0.0,0.0', max_length=50, null=True, verbose_name='GPS Location')),
                ('isvendor', models.BooleanField(default=False, verbose_name='Is Vendor')),
                ('is_serviceprovider', models.BooleanField(default=False, verbose_name='Is ServiceProvider')),
            ],
            options={
                'verbose_name': 'Buisiness Unit',
                'verbose_name_plural': 'Buisiness Units',
                'db_table': 'bt',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('contractname', models.CharField(max_length=50)),
                ('contract_startdate', models.DateField(null=True)),
                ('contract_enddate', models.DateField(null=True)),
                ('enable', models.BooleanField(default=True)),
                ('isaddposting', models.BooleanField(default=False)),
                ('revno', models.IntegerField()),
                ('remarks', models.CharField(max_length=50, null=True)),
            ],
            options={
                'db_table': 'contract',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ContractDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('quantity', models.IntegerField()),
                ('cdstartdate', models.DateTimeField(null=True)),
                ('cdenddate', models.DateField(null=True)),
            ],
            options={
                'db_table': 'contractdetails',
                'ordering': ['mdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeofenceMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('gfcode', models.CharField(max_length=100, verbose_name='Code')),
                ('gfname', models.CharField(max_length=100, verbose_name='Name')),
                ('alerttext', models.CharField(max_length=100, verbose_name='Alert Text')),
                ('geofence', models.TextField(verbose_name='GeoFence')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
            ],
            options={
                'db_table': 'geofencemaster',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('shiftname', models.CharField(max_length=50, verbose_name='Name')),
                ('shiftduration', models.IntegerField(null=True, verbose_name='Shift Duration')),
                ('starttime', models.TimeField(verbose_name='Start time')),
                ('endtime', models.TimeField(verbose_name='End time')),
                ('nightshift_appicable', models.BooleanField(default=True, verbose_name='Night Shift Applicable')),
                ('captchafreq', models.IntegerField(default=10, null=True)),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
            ],
            options={
                'db_table': 'shift',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SitePeople',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('fromdt', models.DateField()),
                ('uptodt', models.DateField()),
                ('siteowner', models.BooleanField(default=False)),
                ('slno', models.IntegerField(default=1)),
                ('posting_revision', models.IntegerField(default=1)),
                ('webcapability', models.CharField(max_length=1000, null=True)),
                ('mobilecapability', models.CharField(max_length=1000, null=True)),
                ('reportcapability', models.CharField(max_length=1000, null=True)),
                ('enable', models.BooleanField(default=True)),
                ('emergencycontact', models.BooleanField(default=False, null=True)),
                ('ackdate', models.DateTimeField(auto_now_add=True, null=True)),
                ('isreliver', models.BooleanField(default=False, null=True)),
                ('checkpost', models.BigIntegerField(null=True)),
                ('enablesleepingguard', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'sitepeople',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeAssist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(auto_now=True, verbose_name='mdtz')),
                ('tacode', models.CharField(max_length=50, unique=True, verbose_name='tacode')),
                ('taname', models.CharField(max_length=100, verbose_name='taname')),
                ('tatype', models.CharField(max_length=100, verbose_name='tatype')),
            ],
            options={
                'db_table': 'typeassist',
                'ordering': ['mdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WizardDraft',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(auto_now_add=True)),
                ('mdtz', models.DateTimeField(auto_now=True)),
                ('wizard_data', models.JSONField(blank=True, default=apps.onboarding.models.wizard_default, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('form_data', models.JSONField(blank=True, default=apps.onboarding.models.formData_default, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True)),
                ('buid', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wiz_buids', to='onboarding.bt')),
            ],
            options={
                'db_table': 'wizard_draft',
                'get_latest_by': ['mdtz'],
            },
        ),
    ]
