# Generated by Django 3.2.18 on 2023-06-25 13:03

import apps.onboarding.managers
import apps.onboarding.models
import apps.peoples.models
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.serializers.json
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('uuid', models.UUIDField(null=True)),
                ('bucode', models.CharField(max_length=30, verbose_name='Code')),
                ('solid', models.CharField(blank=True, max_length=30, null=True, verbose_name='Sol ID')),
                ('bupreferences', models.JSONField(blank=True, default=apps.onboarding.models.bu_defaults, encoder=django.core.serializers.json.DjangoJSONEncoder, null=True, verbose_name='bupreferences')),
                ('buname', models.CharField(max_length=200, verbose_name='Name')),
                ('butree', models.CharField(blank=True, default='', max_length=300, null=True, verbose_name='Bu Path')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
                ('iswarehouse', models.BooleanField(default=False, verbose_name='Warehouse')),
                ('gpsenable', models.BooleanField(default=False, verbose_name='GPS Enable')),
                ('enablesleepingguard', models.BooleanField(default=False, verbose_name='Enable SleepingGuard')),
                ('skipsiteaudit', models.BooleanField(default=False, verbose_name='Skip SiteAudit')),
                ('siincludes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), blank=True, null=True, size=None, verbose_name='Site Inclides')),
                ('deviceevent', models.BooleanField(default=False, verbose_name='Device Event')),
                ('pdist', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Permissible Distance')),
                ('gpslocation', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326, verbose_name='GPS Location')),
                ('isvendor', models.BooleanField(default=False, verbose_name='Vendor')),
                ('isserviceprovider', models.BooleanField(default=False, verbose_name='ServiceProvider')),
            ],
            options={
                'verbose_name': 'Buisiness Unit',
                'verbose_name_plural': 'Buisiness Units',
                'db_table': 'bt',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
            managers=[
                ('objects', apps.onboarding.managers.BtManager()),
            ],
        ),
        migrations.CreateModel(
            name='GeofenceMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('gfcode', models.CharField(max_length=100, verbose_name='Code')),
                ('gfname', models.CharField(max_length=100, verbose_name='Name')),
                ('alerttext', models.CharField(max_length=100, verbose_name='Alert Text')),
                ('geofence', django.contrib.gis.db.models.fields.PolygonField(geography=True, null=True, srid=4326, verbose_name='GeoFence')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
            ],
            options={
                'db_table': 'geofencemaster',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('shiftname', models.CharField(max_length=50, verbose_name='Name')),
                ('shiftduration', models.IntegerField(null=True, verbose_name='Shift Duration')),
                ('peoplecount', models.IntegerField(blank=True, null=True, verbose_name='People Count')),
                ('starttime', models.TimeField(verbose_name='Start time')),
                ('endtime', models.TimeField(verbose_name='End time')),
                ('nightshiftappicable', models.BooleanField(default=True, verbose_name='Night Shift Applicable')),
                ('captchafreq', models.IntegerField(default=10, null=True)),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
            ],
            options={
                'db_table': 'shift',
                'ordering': ['mdtz'],
                'get_latest_by': ['mdtz', 'cdtz'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TypeAssist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default=apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('tacode', models.CharField(max_length=50, verbose_name='tacode')),
                ('taname', models.CharField(max_length=100, verbose_name='taname')),
                ('enable', models.BooleanField(default=True, verbose_name='Enable')),
                ('bu', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='ta_bus', to='onboarding.bt', verbose_name='Buisiness View')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='ta_clients', to='onboarding.bt', verbose_name='Client')),
            ],
            options={
                'db_table': 'typeassist',
                'ordering': ['mdtz'],
                'abstract': False,
            },
            managers=[
                ('objects', apps.onboarding.managers.TypeAssistManager()),
            ],
        ),
    ]
