# Generated by Django 3.2 on 2022-07-04 05:48

import apps.attendance.managers
import apps.attendance.models
import apps.peoples.models
import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.serializers.json
from django.db import migrations, models
import uuid

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PeopleEventlog',
            fields=[
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name='ID')),
                ('cdtz', models.DateTimeField(default = apps.peoples.models.now, verbose_name='cdtz')),
                ('mdtz', models.DateTimeField(default = apps.peoples.models.now, verbose_name='mdtz')),
                ('ctzoffset', models.IntegerField(default=-1, verbose_name='TimeZone')),
                ('uuid', models.UUIDField(blank = True, default = uuid.uuid4, unique = True)),
                ('transportmodes', django.contrib.postgres.fields.ArrayField(base_field = models.CharField(blank = True, choices=[('BIKE', 'Bike'), ('RICKSHAW', 'Rickshaw'), ('BUS', 'Bus'), ('TRAIN', 'Train'), ('PLANE', 'Plane'), ('BOAT', 'Boat or Ship'), ('NONE', 'NONE'), ('CAR', 'Car'), ('CAB', 'Cab')], default='NONE', max_length = 50), default = list, size = None)),
                ('punchintime', models.DateTimeField(null = True, verbose_name='In')),
                ('punchouttime', models.DateTimeField(null = True, verbose_name='Out')),
                ('datefor', models.DateField(null = True, verbose_name='Date')),
                ('distance', models.FloatField(blank = True, null = True, verbose_name='Distance')),
                ('duration', models.IntegerField(blank = True, null = True, verbose_name='Duration')),
                ('expamt', models.FloatField(blank = True, default = 0.0, null = True, verbose_name='exampt')),
                ('accuracy', models.FloatField(blank = True, null = True, verbose_name='accuracy')),
                ('deviceid', models.CharField(blank = True, max_length = 50, null = True, verbose_name='deviceid')),
                ('startlocation', django.contrib.gis.db.models.fields.PointField(geography = True, null = True, srid = 4326, verbose_name='GPS-In')),
                ('endlocation', django.contrib.gis.db.models.fields.PointField(blank = True, geography = True, null = True, srid = 4326, verbose_name='GPS-Out')),
                ('journeypath', django.contrib.gis.db.models.fields.LineStringField(geography = True, null = True, srid = 4326)),
                ('remarks', models.CharField(blank = True, max_length = 500, null = True, verbose_name='remarks')),
                ('facerecognition', models.BooleanField(default = True, verbose_name='Enable Face-Recognition')),
                ('peventlogextras', models.JSONField(default = apps.attendance.models.peventlog_json, encoder = django.core.serializers.json.DjangoJSONEncoder, verbose_name='peventlogextras')),
                ('otherlocation', models.CharField(default = None, max_length = 50, verbose_name='Other Location')),
                ('reference', models.CharField(max_length = 55, null = True, verbose_name='Reference')),
            ],
            options={
                'db_table': 'peopleeventlog',
                'ordering': ['mdtz'],
                'abstract': False,
            },
            managers=[
                ('objects', apps.attendance.managers.PELManager()),
            ],
        ),
        migrations.CreateModel(
            name='TestGeo',
            fields=[
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name='ID')),
                ('code', models.CharField(max_length = 15)),
                ('poly', django.contrib.gis.db.models.fields.PolygonField(geography = True, null = True, srid = 4326)),
                ('point', django.contrib.gis.db.models.fields.PointField(geography = True, null = True, srid = 4326)),
                ('line', django.contrib.gis.db.models.fields.LineStringField(geography = True, null = True, srid = 4326)),
            ],
        ),
        migrations.CreateModel(
            name='Tracking',
            fields=[
                ('id', models.BigAutoField(auto_created = True, primary_key = True, serialize = False, verbose_name='ID')),
                ('uuid', models.UUIDField(blank = True, default = uuid.uuid4, unique = True)),
                ('deviceid', models.CharField(max_length = 40)),
                ('gpslocation', django.contrib.gis.db.models.fields.PointField(geography = True, srid = 4326)),
                ('receiveddate', models.DateTimeField(null = True)),
                ('transportmode', models.CharField(max_length = 55)),
                ('reference', models.CharField(default = None, max_length = 255)),
                ('identifier', models.CharField(choices=[('NONE', 'None'), ('CONVEYANCE', 'Conveyance'), ('EXTERNALTOUR', 'External Tour'), ('SITEVISIT', 'Site Visit')], default='NONE', max_length = 55)),
            ],
            options={
                'db_table': 'tracking',
            },
        ),
    ]
